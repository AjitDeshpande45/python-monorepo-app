name: Python application

on:
  push:
    branches: [ "stagging" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install trivy
      run: | 
        sudo apt-get update
        sudo apt-get install -y wget
        wget https://github.com/aquasecurity/trivy/releases/download/v0.41.0/trivy_0.41.0_Linux-64bit.deb
        sudo dpkg -i trivy_0.41.0_Linux-64bit.deb

    - name: Trivy scan for code repo
      run: |
        mkdir -p trivy-reports
        trivy fs --exit-code 1 --severity CRITICAL,HIGH --output trivy-reports/report.txt .
    
    - name: Upload Trivy report artifact
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report
        path: trivy-reports/report.txt
        
  - name: Run Test cases & Generate report

      run: |
        python3 -m venv myenv
        source myenv/bin/activate
        pip install -r requirements.txt
        PYTHONPATH=. pytest --cov=apps.user_app --cov-report=xml:reports/coverage.xml

  - name: Sonar-Analysis
      env: 
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        HOSTNAME: ${{secrets.SSH_HOST}}
        USER_NAME: ${{secrets.USER_NAME}}
        SONAR_HOST: ${{secrets.SONAR_HOST}}
        SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}

      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -v -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} << 'EOF'
          echo "Logged into Sonar remote host"
          ls
          sonar-scanner \
          -Dsonar.projectKey=pythin-monorepo \
          -Dsonar.sources=. \
          -Dsonar.python.coverage.reportPaths=reports/coverage.xml \
          -Dsonar.host.url=${SONAR_HOST} \
          -Dsonar.token=${SONAR_TOKEN}
        EOF