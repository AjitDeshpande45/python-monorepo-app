name: Python application

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run pytest & generate report
      run: |
        pip install -r requirements.txt
        PYTHONPATH=. pytest --cov=apps.user_app --cov-report=xml:reports/coverage.xml
    
    - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST }}
          SONAR_SCANNER_OPTS: >
            -Dsonar.python.coverage.reportPaths=reports/coverage.xml

    - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST }}

    - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Deploy Python Server
      env: 
        PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        HOSTNAME: ${{ secrets.SSH_HOST }}
        USER_NAME: ${{ secrets.USER_NAME }}

      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -v -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} << EOF
          echo "Logged into EC2 remote host"
          ls
          rm -rf python-monorepo-app/
          git clone https://github.com/AjitDeshpande45/python-monorepo-app.git
          cd python-monorepo-app
          python3 -m venv myenv
          source myenv/bin/activate
          sudo apt install python3-pip
          pip install -r requirement.txt
          tmux new-session -d -s flask_session 'PYTHONPATH=. python apps/user_app/app.py'
        EOF